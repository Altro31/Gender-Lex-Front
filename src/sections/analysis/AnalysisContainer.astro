---
import ResultContainer from "@/sections/analysis/components/ResultContainer"
import { analyzeTextInputSchema } from "@/utils/schemas/analyzeTextInput"

const formData = await Astro.request.formData()
const { success, data } = analyzeTextInputSchema.safeParse(
    Object.fromEntries(formData.entries()),
)
if (!success) throw new Error("Text must be provided")
const text = data!.text

// const cachedResponse = text ? await getCachedResponse(text) :  undefined
---

<section class="group">
    <div id="test" class="group-has-[&_astro-island:empty]:bg-red-500">
        Test
    </div>
    <!-- {
        cachedResponse?.length ? (
            <ResultList expressions={cachedResponse} />
        ) : (
            <> -->
    <ResultContainer
        text={text}
        client:only="react"
        data-name="ResultContainer"
    >
        {/* <ResultItemSkeleton slot="fallback" /> */}
    </ResultContainer>
    <!-- </>
        )
    } -->
</section>
